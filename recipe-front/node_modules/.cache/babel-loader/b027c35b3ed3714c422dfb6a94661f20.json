{"ast":null,"code":"var _jsxFileName = \"F:\\\\jmm.intern\\\\react\\\\recipe-app-heroku\\\\recipe-front\\\\src\\\\Routes\\\\PrivateRoute.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Navigate, useLocation } from \"react-router-dom\";\nimport { useUserContext } from \"../Context/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    isLogin\n  } = useUserContext();\n\n  if (!isLogin()) {\n    // Redirect them to the /login page, but save the current location they were\n    // trying to go to when they were redirected. This allows us to send them\n    // along to that page after they login, which is a nicer user experience\n    // than dropping them off on the home page.\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n\n  return children;\n};\n\n_s(PrivateRoute, \"YqnGyHc7JJUjJ1kagKOj2bm7DQo=\", false, function () {\n  return [useUserContext];\n});\n\n_c = PrivateRoute;\nexport default PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["F:/jmm.intern/react/recipe-app-heroku/recipe-front/src/Routes/PrivateRoute.jsx"],"names":["React","Navigate","useLocation","useUserContext","PrivateRoute","children","isLogin"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,kBAAtC;AACA,SAASC,cAAT,QAA+B,wBAA/B;;;AAEA,MAAMC,YAAY,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAcH,cAAc,EAAlC;;AAEA,MAAI,CAACG,OAAO,EAAZ,EAAgB;AACd;AACA;AACA;AACA;AACA,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,SAAOD,QAAP;AACD,CAXD;;GAAMD,Y;UACgBD,c;;;KADhBC,Y;AAaN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport { Navigate, useLocation } from \"react-router-dom\";\r\nimport { useUserContext } from \"../Context/UserContext\";\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n  const { isLogin } = useUserContext();\r\n\r\n  if (!isLogin()) {\r\n    // Redirect them to the /login page, but save the current location they were\r\n    // trying to go to when they were redirected. This allows us to send them\r\n    // along to that page after they login, which is a nicer user experience\r\n    // than dropping them off on the home page.\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n  return children;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"]},"metadata":{},"sourceType":"module"}