{"ast":null,"code":"var _jsxFileName = \"F:\\\\jmm.intern\\\\react\\\\recipe-app-heroku\\\\recipe-front\\\\src\\\\Components\\\\Dashboard\\\\ImgUpload.jsx\";\nimport React, { Component } from \"react\";\nimport { Upload, message } from \"antd\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getBase64(img, callback) {\n  console.log(\"getbase\", img);\n  const reader = new FileReader();\n  reader.addEventListener(\"load\", () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nfunction beforeUpload(file) {\n  console.log(file);\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n\n  if (!isJpgOrPng) {\n    message.error(\"You can only upload JPG/PNG file!\");\n  }\n\n  const isLt2M = file.size / 1024 / 1024 < 2;\n\n  if (!isLt2M) {\n    message.error(\"Image must smaller than 2MB!\");\n  }\n\n  return isJpgOrPng && isLt2M;\n}\n\nclass ImgUpload extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loading: false\n    };\n\n    this.handleChange = info => {\n      if (info.file.status === \"uploading\") {\n        this.setState({\n          loading: true\n        });\n        return;\n      }\n\n      if (info.file.status === \"done\") {\n        // Get this url from response in real world.\n        getBase64(info.file.originFileObj, imageUrl => this.setState({\n          imageUrl,\n          loading: false\n        }));\n      }\n    };\n  }\n\n  render() {\n    const {\n      loading,\n      imageUrl\n    } = this.state;\n\n    const uploadButton = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [loading ? /*#__PURE__*/_jsxDEV(LoadingOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 8\n        },\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(Upload, {\n      name: \"image\",\n      listType: \"picture-card\",\n      className: \"avatar-uploader\",\n      showUploadList: false // action=\"https://localhost:3001/image-upload\"\n      ,\n      beforeUpload: beforeUpload,\n      onChange: this.handleChange,\n      children: imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: \"avatar\",\n        style: {\n          width: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this) : uploadButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ImgUpload;","map":{"version":3,"sources":["F:/jmm.intern/react/recipe-app-heroku/recipe-front/src/Components/Dashboard/ImgUpload.jsx"],"names":["React","Component","Upload","message","LoadingOutlined","PlusOutlined","getBase64","img","callback","console","log","reader","FileReader","addEventListener","result","readAsDataURL","beforeUpload","file","isJpgOrPng","type","error","isLt2M","size","ImgUpload","state","loading","handleChange","info","status","setState","originFileObj","imageUrl","render","uploadButton","marginTop","width"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport { Upload, message } from \"antd\";\r\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\r\n\r\nfunction getBase64(img, callback) {\r\n  console.log(\"getbase\", img);\r\n  const reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => callback(reader.result));\r\n  reader.readAsDataURL(img);\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  console.log(file);\r\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n  if (!isJpgOrPng) {\r\n    message.error(\"You can only upload JPG/PNG file!\");\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2;\r\n  if (!isLt2M) {\r\n    message.error(\"Image must smaller than 2MB!\");\r\n  }\r\n  return isJpgOrPng && isLt2M;\r\n}\r\n\r\nclass ImgUpload extends React.Component {\r\n  state = {\r\n    loading: false,\r\n  };\r\n\r\n  handleChange = (info) => {\r\n    if (info.file.status === \"uploading\") {\r\n      this.setState({ loading: true });\r\n      return;\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, (imageUrl) =>\r\n        this.setState({\r\n          imageUrl,\r\n          loading: false,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { loading, imageUrl } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n        <div style={{ marginTop: 8 }}>Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <Upload\r\n        name=\"image\"\r\n        listType=\"picture-card\"\r\n        className=\"avatar-uploader\"\r\n        showUploadList={false}\r\n        // action=\"https://localhost:3001/image-upload\"\r\n        beforeUpload={beforeUpload}\r\n        onChange={this.handleChange}\r\n      >\r\n        {imageUrl ? (\r\n          <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\r\n        ) : (\r\n          uploadButton\r\n        )}\r\n      </Upload>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImgUpload;\r\n"]},"metadata":{},"sourceType":"module"}