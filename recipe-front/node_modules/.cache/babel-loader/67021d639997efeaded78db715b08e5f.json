{"ast":null,"code":"var _jsxFileName = \"F:\\\\jmm.intern\\\\react\\\\recipe-app-heroku\\\\recipe-front\\\\src\\\\Pages\\\\Dashboard\\\\AddNewRecipe.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from \"react\";\nimport { Form, Input, Button, message, Upload } from \"antd\";\nimport axios from \"axios\";\nimport { useUserContext } from \"../../Context/UserContext\";\nimport { UploadOutlined } from \"@ant-design/icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddNewRecipe = () => {\n  _s();\n\n  // useStates\n  const {\n    getUserId,\n    getUser\n  } = useUserContext();\n  const [addNewRecipe] = Form.useForm(); // Form handling\n\n  const onFinish = e => {\n    console.log(e);\n    console.log(\"e \", e.image.file.originFileObj); // const formData = addNewRecipe.getFieldsValue();\n\n    var formData = new FormData();\n    formData.append(\"title\", e.title);\n    formData.append(\"content\", e.content);\n    formData.append(\"ingredients\", e.ingredients);\n    formData.append(\"totalCost\", e.totalCost);\n    formData.append(\"totalTimeReq\", e.totalTimeReq);\n    formData.append(\"userId\", e.userId);\n    formData.append(\"image\", e.image.file.originFileObj);\n    axios.post(\"/create-recipe\", formData).then(res => {\n      res.data.type ? message.info(res.data.message) : message.error(res.data.message);\n      addNewRecipe.resetFields();\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  }; //handling\n\n\n  const handleUpload = e => {\n    // var data = new FormData();\n    // const image = addNewRecipe.getFieldValue(\"image\");\n    // console.log(image);\n    // data.append('image', image.file.)\n    // console.log(e.image[0].originFileObj);\n    // formData.append(\"image\", values.image[0].originFileObj);\n    // formData.append(\"title\", values.title);\n    // formData.append(\"body\", textbody);\n    console.log(\"filed value\", e); // axios.post(\"/image-upload\", e.file).then((res) => {\n    //   console.log(res);\n    // });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-form-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        name: \"newRecipe\",\n        onFinish: onFinish,\n        onFinishFailed: onFinishFailed,\n        autoComplete: \"off\",\n        layout: \"vertical\",\n        form: addNewRecipe,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"userId\",\n              name: \"userId\",\n              initialValue: getUserId(),\n              hidden: true,\n              children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"author\",\n              name: \"author\",\n              initialValue: getUser(),\n              hidden: true,\n              children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Recipe Name\",\n              name: \"title\",\n              rules: [{\n                required: true,\n                message: \"Please input your recipe name!\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Ingredients\",\n              name: \"ingredients\",\n              rules: [{\n                required: true,\n                message: \"Please input ingredients\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Time Required for Cooking\",\n              name: \"totalTimeReq\",\n              rules: [{\n                required: true,\n                message: \"Please input time required for cooking!\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Total Cost\",\n              name: \"totalCost\",\n              rules: [{\n                required: true,\n                message: \"Please input cost for recipe!\"\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Discription\",\n          name: \"content\",\n          rules: [{\n            required: true,\n            message: \"Please input discription with steps and full dettail!\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Image Upload\",\n          name: \"image\",\n          rules: [{\n            required: true,\n            message: \"Please upload image!\"\n          }],\n          children: /*#__PURE__*/_jsxDEV(Upload, {\n            customRequest: handleUpload,\n            name: \"image\",\n            showUploadList: false,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: /*#__PURE__*/_jsxDEV(UploadOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 29\n              }, this),\n              children: \"Click to Upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-start\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddNewRecipe, \"ROgkTEsXSBWXy2+kRTjU32RFNqw=\", false, function () {\n  return [useUserContext, Form.useForm];\n});\n\n_c = AddNewRecipe;\nexport default AddNewRecipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNewRecipe\");","map":{"version":3,"sources":["F:/jmm.intern/react/recipe-app-heroku/recipe-front/src/Pages/Dashboard/AddNewRecipe.jsx"],"names":["React","Component","Form","Input","Button","message","Upload","axios","useUserContext","UploadOutlined","AddNewRecipe","getUserId","getUser","addNewRecipe","useForm","onFinish","e","console","log","image","file","originFileObj","formData","FormData","append","title","content","ingredients","totalCost","totalTimeReq","userId","post","then","res","data","type","info","error","resetFields","catch","err","onFinishFailed","errorInfo","handleUpload","required"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Input, Button, message, Upload } from \"antd\";\r\nimport axios from \"axios\";\r\nimport { useUserContext } from \"../../Context/UserContext\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\n\r\nconst AddNewRecipe = () => {\r\n  // useStates\r\n  const { getUserId, getUser } = useUserContext();\r\n  const [addNewRecipe] = Form.useForm();\r\n  // Form handling\r\n  const onFinish = (e) => {\r\n    console.log(e);\r\n    console.log(\"e \", e.image.file.originFileObj);\r\n    // const formData = addNewRecipe.getFieldsValue();\r\n    var formData = new FormData();\r\n    formData.append(\"title\", e.title);\r\n    formData.append(\"content\", e.content);\r\n    formData.append(\"ingredients\", e.ingredients);\r\n    formData.append(\"totalCost\", e.totalCost);\r\n    formData.append(\"totalTimeReq\", e.totalTimeReq);\r\n    formData.append(\"userId\", e.userId);\r\n    formData.append(\"image\", e.image.file.originFileObj);\r\n    axios\r\n      .post(\"/create-recipe\", formData)\r\n      .then((res) => {\r\n        res.data.type\r\n          ? message.info(res.data.message)\r\n          : message.error(res.data.message);\r\n        addNewRecipe.resetFields();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  //handling\r\n  const handleUpload = (e) => {\r\n    // var data = new FormData();\r\n    // const image = addNewRecipe.getFieldValue(\"image\");\r\n    // console.log(image);\r\n    // data.append('image', image.file.)\r\n    // console.log(e.image[0].originFileObj);\r\n    // formData.append(\"image\", values.image[0].originFileObj);\r\n    // formData.append(\"title\", values.title);\r\n    // formData.append(\"body\", textbody);\r\n\r\n    console.log(\"filed value\", e);\r\n\r\n    // axios.post(\"/image-upload\", e.file).then((res) => {\r\n    //   console.log(res);\r\n    // });\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"recipe-form-wrapper\">\r\n        <Form\r\n          name=\"newRecipe\"\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n          autoComplete=\"off\"\r\n          layout=\"vertical\"\r\n          form={addNewRecipe}\r\n        >\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <Form.Item\r\n                label=\"userId\"\r\n                name=\"userId\"\r\n                initialValue={getUserId()}\r\n                hidden={true}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"author\"\r\n                name=\"author\"\r\n                initialValue={getUser()}\r\n                hidden={true}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Recipe Name\"\r\n                name=\"title\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input your recipe name!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Ingredients\"\r\n                name=\"ingredients\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input ingredients\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </div>\r\n            <div className=\"col-6\">\r\n              <Form.Item\r\n                label=\"Time Required for Cooking\"\r\n                name=\"totalTimeReq\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input time required for cooking!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item\r\n                label=\"Total Cost\"\r\n                name=\"totalCost\"\r\n                rules={[\r\n                  {\r\n                    required: true,\r\n                    message: \"Please input cost for recipe!\",\r\n                  },\r\n                ]}\r\n              >\r\n                <Input />\r\n              </Form.Item>\r\n            </div>\r\n          </div>\r\n          <Form.Item\r\n            label=\"Discription\"\r\n            name=\"content\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message:\r\n                  \"Please input discription with steps and full dettail!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"Image Upload\"\r\n            name=\"image\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please upload image!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Upload customRequest={handleUpload} name=\"image\" showUploadList={false}>\r\n              <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n            </Upload>\r\n          </Form.Item>\r\n\r\n          <div className=\"text-start\">\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddNewRecipe;\r\n"]},"metadata":{},"sourceType":"module"}