{"ast":null,"code":"var _jsxFileName = \"F:\\\\jmm.intern\\\\react\\\\recipe-app-heroku\\\\recipe-front\\\\src\\\\Pages\\\\Dashboard\\\\RecipeListTable.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { message, Popconfirm, Table } from \"antd\";\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\nimport { useUserContext } from \"../../Context/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecipeListTable = props => {\n  _s();\n\n  const {\n    getUserId\n  } = useUserContext();\n  const [recipes, setRecipes] = React.useState([]);\n  const [u_id] = React.useState(getUserId());\n  console.log(u_id);\n  useEffect(() => {\n    axios.get(`/recipes/${u_id}`).then(res => {\n      setRecipes(res.data);\n    });\n  }, []);\n\n  const handleDelete = _id => {\n    console.log(\"handle Delete\", _id);\n    axios.delete(`/delete-recipe/${_id}`).then(res => {\n      res.data.type ? message.info(res.data.message) : message.error(\"Error in deleting record\");\n    }); // window.location.reload();\n\n    axios.get(`/recipes/${u_id}`).then(res => {\n      setRecipes(res.data);\n    });\n  };\n\n  const columns = [{\n    title: \"S.No\",\n    // dataIndex: \"title\",\n    render: (text, record, index) => {\n      /*#__PURE__*/\n      _jsxDEV(\"span\", {\n        children: index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 40\n      }, this);\n    }\n  }, {\n    title: \"Title\",\n    dataIndex: \"title\",\n    key: \"title\"\n  }, {\n    title: \"Rating\",\n    dataIndex: \"rating\",\n    key: \"rating\"\n  }, {\n    title: \"Content\",\n    dataIndex: \"content\",\n    key: \"content\"\n  }, {\n    title: \"Action\",\n    render: record => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Popconfirm, {\n        title: \"Are you sure to delete this recor?\",\n        onConfirm: () => {\n          handleDelete(record._id);\n        },\n        okText: \"Yes\",\n        cancelText: \"No\",\n        children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {\n          className: \"me-2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this),\n    key: \"action\"\n  }];\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      dataSource: recipes,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RecipeListTable, \"Z4CbhpzE6/JLy8z3VJ1Pwlj2rtY=\", false, function () {\n  return [useUserContext];\n});\n\n_c = RecipeListTable;\nexport default RecipeListTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeListTable\");","map":{"version":3,"sources":["F:/jmm.intern/react/recipe-app-heroku/recipe-front/src/Pages/Dashboard/RecipeListTable.jsx"],"names":["React","Component","useEffect","axios","message","Popconfirm","Table","DeleteOutlined","EditOutlined","useUserContext","RecipeListTable","props","getUserId","recipes","setRecipes","useState","u_id","console","log","get","then","res","data","handleDelete","_id","delete","type","info","error","columns","title","render","text","record","index","dataIndex","key"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { message, Popconfirm, Table } from \"antd\";\r\nimport { DeleteOutlined, EditOutlined } from \"@ant-design/icons\";\r\nimport { useUserContext } from \"../../Context/UserContext\";\r\n\r\nconst RecipeListTable = (props) => {\r\n  const { getUserId } = useUserContext();\r\n\r\n  const [recipes, setRecipes] = React.useState([]);\r\n  const [u_id] = React.useState(getUserId());\r\n  console.log(u_id);\r\n\r\n  useEffect(() => {\r\n    axios.get(`/recipes/${u_id}`).then((res) => {\r\n      setRecipes(res.data);\r\n    });\r\n  }, []);\r\n\r\n  const handleDelete = (_id) => {\r\n    console.log(\"handle Delete\", _id);\r\n\r\n    axios.delete(`/delete-recipe/${_id}`).then((res) => {\r\n      res.data.type\r\n        ? message.info(res.data.message)\r\n        : message.error(\"Error in deleting record\");\r\n    });\r\n    // window.location.reload();\r\n    axios.get(`/recipes/${u_id}`).then((res) => {\r\n      setRecipes(res.data);\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"S.No\",\r\n      // dataIndex: \"title\",\r\n      render: (text, record, index)=> {<span>{index}</span>}\r\n    },\r\n    {\r\n      title: \"Title\",\r\n      dataIndex: \"title\",\r\n      key: \"title\",\r\n    },\r\n    {\r\n      title: \"Rating\",\r\n      dataIndex: \"rating\",\r\n      key: \"rating\",\r\n    },\r\n    {\r\n      title: \"Content\",\r\n      dataIndex: \"content\",\r\n      key: \"content\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      render: (record) => (\r\n        <div>\r\n          <Popconfirm\r\n            title=\"Are you sure to delete this recor?\"\r\n            onConfirm={() => {\r\n              handleDelete(record._id);\r\n            }}\r\n            okText=\"Yes\"\r\n            cancelText=\"No\"\r\n          >\r\n            <DeleteOutlined className=\"me-2\" />\r\n          </Popconfirm>\r\n          \r\n        </div>\r\n      ),\r\n      key: \"action\",\r\n    },\r\n  ];\r\n  return (\r\n    <React.Fragment>\r\n      <Table dataSource={recipes} columns={columns} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default RecipeListTable;\r\n"]},"metadata":{},"sourceType":"module"}